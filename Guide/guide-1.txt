1- npm itit >> دا عشان تعمل ملف الباكدج

2- "Start": "nodemon app.js",
here in scripts >> to type npm start instead of nodemon
  "scripts": {
    "start": "nodemon app.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },

3- .env
    steps:{
        1- npm i dotenv
        2- add a file names ".env"
        3- put in it the strings you want with out quotes 
        4- require >> require("dotenv/config");
        5- const >> const api = process.env.API_URL;

       important >> Never Ever Never Ever Never Ever put in in const like this
        const API_URL = /api/v1  XXXXXXXXXXX
        API_URL = /api/v1    true
      }


4- body parser  >> when you want to post data to server
      steps:{
        1- npm i body-parser
        2- const bodyParser = require("body-parser")
        3- app.use(bodyParser.json()); // in middleware
      }

5- Logging API requests 
      steps:{
        1- npm i morgan
        2- const morgan require("morgan")
        3- app.use(morgan("tiny)) // in middleware
      }


////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////


Connect The database

  1- npm i mongoose
   - const mongoose = require("mongoose")
   - mongoose.connect("قيمة الاسترينج اللى خدتها من المونجو شوف بتيجى ازاى تحت")  // before start the server function.

  2- How to connect :{
      a- go to clusters and press connect.
      b- choose connect your application. then you'll get a String copy it
      c- mongoose.connect("URL from mongo db")
      d- go to database access // you have to add user in mongo db and get the user name and password
      e- put username and passowrd and database name in the URL
  }

  3-  handle the promise
      mongoose.connect(process.env.CONNECT_STRING, {     // it'll be better when you put the URL in .env
     
      useNewUrlParser: true,
      useUnifiedTopology: true,
      dbName: "sheetCheat",   // >>> اتاكد ان الاسم دا صح يا شبح

      })
      .then(() =>{
        console.log("Data base connection is ready")
      })
      .catch((err) =>{
        console.log(err)
      })

      important.. The IP, 
      1- go to network acces and.
      2- add ip 
    

////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////


Post to database

  1- create a product Schema :-

      const productsSchema = mongoose.Schema({
      name: String,
      image: String,
      countInStock: Number,
      // countInStock: { type: Number, required: true } // if you want to add validation 
    });



  2- create a product Model :- 
    const Product = mongoose.model("Product", productsSchema);

  3- post the product :- 

      app.post(`${api}/products`, (req, res) => {
        const product = new Product({
          name: req.body.name,
          image: req.body.image,
          countInStock: req.body.countInStock,
        });
        product
          .save()
          .then((createdProduct) => {
            res.status(201).json(createdProduct);
          })
          .catch((err) => {
            res.status(500).json({
              error: err,
              success: false,
            });
          });
      });


Read from database.

      app.get(`${api}/products`, async (req, res) => {
        const productList = await Product.find();
        res.send(productList);
      });


////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////


Move code in seprate files

  steps:{
    1- make folders ex>> routers or models
    2- in models add file called ex>> product.
       change >>  const Product = mongoose.model("Product", productsSchema);
       to >>  exports.Product = mongoose.model("Product", productsSchema);
    
    3-in routers >> 
            const express = require("express");
            const router = express.Router();
            const { Product } = require("../models/product");

            router.get(`/`, async (req, res) => {
              const productList = await Product.find();
              res.send(productList);
            });

            router.post(`/`, (req, res) => {
              const product = new Product({
                name: req.body.name,
                image: req.body.image,
                countInStock: req.body.countInStock,
              });
              product
                .save()
                .then((createdProduct) => {
                  res.status(201).json(createdProduct);
                })
                .catch((err) => {
                  res.status(500).json({
                    error: err,
                    success: false,
                  });
                });
            });

            module.exports = router;


        3- in app.js>> 
              const productsRouter = require("./routers/products");
              app.use(`${api}/products`, productsRouter);
      
  }



  /////////////////// 

  cors >> لما الباك اند يشتغل على سرفر مختلف عن الفرونت اند
  سهلة جدا جدا جدا بس خليها لبعدين